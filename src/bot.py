import asyncio
import telebot
from loguru import logger
from .config import get_settings
from .llm import DeepSeekLLM

class CalendarBot:
    def __init__(self):
        self.settings = get_settings()
        self.bot = telebot.TeleBot(self.settings["telegram_token"])
        self.llm = DeepSeekLLM()
        self._setup_handlers()

    def _setup_handlers(self):
        @self.bot.message_handler(func=lambda message: True)
        def handle_message(message):
            try:
                logger.info(f"Received message from {message.from_user.id}: {message.text}")
                self.bot.send_chat_action(message.chat.id, 'typing')
                event = asyncio.run(self.llm.parse_calendar_event(message.text))
                
                if not event:
                    self.bot.reply_to(
                        message,
                        "–ù–µ —É–¥–∞–ª–æ—Å—å –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑."
                    )
                    return
                
                if not event["result"]:
                    self.bot.reply_to(
                        message,
                        f"–ù–µ —É–¥–∞–ª–æ—Å—å —Ä–∞—Å–ø–∞—Ä—Å–∏—Ç—å —Å–æ–±—ã—Ç–∏–µ: {event['comment']}"
                    )
                    return
                
                response = (
                    f"‚úÖ –°–æ–±—ã—Ç–∏–µ —É—Å–ø–µ—à–Ω–æ —Ä–∞—Å–ø–∞—Ä—Å–µ–Ω–æ!\n\n"
                    f"üìå {event['title']}\n"
                    f"üïí –ù–∞—á–∞–ª–æ: {event['start_time']}\n"
                    f"üïí –ö–æ–Ω–µ—Ü: {event['end_time']}\n"
                    f"üìç {event['location']}\n"
                    f"üìù {event['description']}"
                )
                
                self.bot.reply_to(message, response)
                
            except Exception as e:
                logger.error(f"Error processing message: {str(e)}")
                self.bot.reply_to(message, "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.")

    def run(self):
        logger.info("Starting bot...")
        self.bot.infinity_polling()
